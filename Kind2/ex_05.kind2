Bool: Type
Bool.true : Bool
Bool.false : Bool


// Basic Exercises involving Pairs

Pair     (a: Type) (b: Type)             : Type
Pair.new <a>       <b> (fst: a) (snd: b) : (Pair a b) 

// Example:
// Swaps the elements of a pair
Pair.swap <a: Type> <b: Type> (pair: (Pair a b)) : (Pair b a)
Pair.swap a b (Pair.new pair.a pair.b fst snd) = (Pair.new pair.b pair.a snd fst)


// Returns the first element of a pair
Pair.first <a: Type> <b: Type> (pair: (Pair a b)) : a
Pair.first a b (Pair.new pair.a pair.b fst snd) = fst

// Returns the second element of a pair
Pair.second <a: Type> <b: Type> (pair: (Pair a b)) : b
Pair.second a b (Pair.new pair.a pair.b fst snd) = snd

// Applies a function to both elements of a Pair
// map<A: Type, B: Type>(fn: A -> B, pair: Pair<A,A>): Pair<B,B>
Pair.map <a: Type> <b: Type> (fn: (x: a) b ) (pair: (Pair a a)) : (Pair b b)
Pair.map a b fn (Pair.new pair.a pair.b fst snd) = (Pair.new (fn fst) (fn snd) )
// (fn: (x: a) b ) nao entendi isso perguntar ao savio


Main {
  let a = (Pair.new Bool.true Bool.false)
  let b = (Pair.new Bool.false Bool.true)
  Pair.second b
}